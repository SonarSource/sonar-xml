name: Nightly
on:
  schedule:
    - cron: "0 2 * * *"  # Run daily at 2 AM UTC (equivalent to nightly cron)
  workflow_dispatch:  # Allow manual triggering

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  shadow-scan:
    runs-on: github-ubuntu-latest-s  # Custom GitHub-hosted runner for public repos
    name: Shadow Scan and Issue Replication (${{ matrix.platform }})
    permissions:
      id-token: write  # Required for Vault OIDC authentication
      contents: write  # Required for repository access
    strategy:
      matrix:
        include:
          - platform: "sonarcloud.io"
            shadow_host_url: "https://sonarcloud.io"
            vault_path: "development/kv/data/sonarcloud"
          - platform: "sonarqube.us"  
            shadow_host_url: "https://sonarqube.us"
            vault_path: "development/kv/data/sonarqube-us"
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - uses: jdx/mise-action@c37c93293d6b742fc901e1406b8f764f6fb19dac # v2.4.4
        with:
          version: 2025.7.12
      - name: Vault
        id: secrets
        uses: SonarSource/vault-action-wrapper@320bd31b03e5dacaac6be51bbbb15adf7caccc32 # v3.1.0
        with:
          secrets: |
            development/kv/data/next token | SONAR_TOKEN;
            development/kv/data/next url | SONAR_HOST_URL;
            ${{ matrix.vault_path }} token | SHADOW_SONAR_TOKEN;
      - name: Shadow Scan and Issue Replication
        env:
          SONAR_PROJECT_KEY: "org.sonarsource.xml:xml"
          SHADOW_ORGANIZATION: "sonarsource"
          SHADOW_PROJECT_KEY: "SonarSource_sonar-xml"
          SONAR_TOKEN: ${{ fromJSON(steps.secrets.outputs.vault).SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ fromJSON(steps.secrets.outputs.vault).SONAR_HOST_URL }}
          SHADOW_SONAR_TOKEN: ${{ fromJSON(steps.secrets.outputs.vault).SHADOW_SONAR_TOKEN }}
          SHADOW_SONAR_HOST_URL: ${{ matrix.shadow_host_url }}
        run: ./shadow-scan-and-issue-replication.sh